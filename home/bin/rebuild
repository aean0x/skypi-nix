#!/usr/bin/env nix-shell
#!nix-shell -i bash -p alejandra git

# Set variables for directories
REPO_DIR="$HOME/.dotfiles/"
NIXOS_DIR="/etc/nixos"
LOG_FILE="$HOME/.nixos-rebuild.log"

# Set default values for options
REBOOT=false
SAVE_PLASMA=false
UPDATE=false

# Parse optional arguments
while getopts "rpuU" opt; do
    case ${opt} in
        r)
            REBOOT=true
            ;;
        p)
            SAVE_PLASMA=true
            ;;
        u|U)
            UPDATE=true
            ;;
        *)
            echo "Usage: $0 [-r] [-p] [-u|-U]"
            exit 1
            ;;
    esac
done

# Navigate to the repository directory
pushd "$REPO_DIR"

# Pull the latest config from rc2nix
if [ "$SAVE_PLASMA" = true ]; then
    nix run github:nix-community/plasma-manager > ./home/plasma.nix
    echo "Plasma config saved to plasma.nix."
else
    echo "Skipping plasma configuration save. Use -p to save..."
fi

# Find and format all files using Alejandra
find . -type f -exec alejandra {} + &>/dev/null

# Copy files to /etc/nixos
echo "Copying files to /etc/nixos..."
sudo cp -r "$REPO_DIR"/* "$NIXOS_DIR"

# Reset ownership and permissions for /etc/nixos
echo "Setting ownership and permissions for /etc/nixos..."
sudo chown -R root:root "$NIXOS_DIR"
sudo find "$NIXOS_DIR" -type d -exec chmod 755 {} +
sudo find "$NIXOS_DIR" -type f -exec chmod 644 {} +

# Update NixOS only if the update flag is set
if [ "$UPDATE" = true ]; then
    echo "NixOS Upgrading..."
    sudo nix flake update
    # To ensure update is applied before rebuild
    sleep 5
else
    echo "Skipping NixOS update. Use -u or -U to update."
fi

# Rebuild NixOS with the new configuration
echo "NixOS Rebuilding..."
sudo nixos-rebuild switch --flake "$NIXOS_DIR" 2>&1 | tee "$LOG_FILE" | while IFS= read -r line; do
    echo -ne "\r\033[K$line"
done
echo  # Add a newline after the rebuild process

# Check if there were any errors during the rebuild
if grep -qE "error|warning" "$LOG_FILE"; then
    echo "Errors or warnings detected. Displaying relevant lines:"
    grep -A 2 --color=always -E "error|warning" "$LOG_FILE"
    exit 1
else
    echo "Rebuild completed successfully."
    echo "Full log file written to: $LOG_FILE"

    # Commit changes to the repository
    gen=$(nixos-rebuild list-generations | grep current)
    git commit -am "$gen"
fi

# Navigate back to the previous directory
popd

# Reboot if the flag was set
if [ "$REBOOT" = true ]; then
    echo "Rebooting the system..."
    sudo reboot
else
    echo "Skipping reboot. Use -r to reboot."
    echo "Finished rebuild."
fi
